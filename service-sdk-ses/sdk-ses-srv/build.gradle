

dependencies{
	compile project(":sdk-ses-base")
	compile 'com.ai:ipaas-common:0.3'
	compile 'com.ai:ipaas-uac:0.3'
	compile 'com.ai:ipaas-ccs-inner:0.3'

}

publishing {
    publications {
		mavenJar(MavenPublication) {
        	groupId group
        	artifactId "${moduleName}"
            artifact sourcesJar
            version moduleVersion
			pom.withXml {
	            asNode().children().last() + {
	                delegate.dependencies {
						delegate.dependency {
							delegate.groupId("com.ai")
							delegate.artifactId("ipaas-ses-base")
							delegate.version("0.5.7")
						}		                
						delegate.dependency {
							delegate.groupId("com.ai")
							delegate.artifactId("ipaas-uac")
							delegate.version("0.3")
						}
						delegate.dependency {
							delegate.groupId("com.ai")
							delegate.artifactId("ipaas-ccs-inner")
							delegate.version("0.3")
						}
	                }
	            }
	        }
		}	
       publishing.publications.create("${moduleName}", MavenPublication) {
            groupId group
            artifactId moduleName
            version moduleVersion
            artifact  jar
            pom.withXml {
	            asNode().children().last() + {
	                delegate.dependencies {
						delegate.dependency {
							delegate.groupId("com.ai")
							delegate.artifactId("ipaas-ses-base")
							delegate.version("0.5.7")
						}	
						delegate.dependency {
							delegate.groupId("com.ai")
							delegate.artifactId("ipaas-uac")
							delegate.version("0.3")
						}
						delegate.dependency {
							delegate.groupId("com.ai")
							delegate.artifactId("ipaas-ccs-inner")
							delegate.version("0.3")
						}
	                }
	            }
	        }
        }
    }
    repositories {
         maven {
            credentials {
                username = publishUserName
                password = publishUserPassword
            }
            if(moduleVersion.endsWith('-SNAPSHOT')) {
                url publishSnapShotsURL
            } else {
                url publishReleaseURL
            }
        }
    }
}
