dependencies {
    compile project(":sdk-ccs-base")
    compile 'com.ai:ipaas-uac:0.3'
}

publishing {
    publications {
        mavenJar(MavenPublication) {
        	groupId group
        	artifactId "${moduleName}"
            artifact sourcesJar
            version moduleVersion
            pom.withXml {
                asNode().children().last() + {
                    delegate.dependencies {
                        delegate.dependency {
                            delegate.groupId("com.ai")
                            delegate.artifactId("ipaas-zookeeper-utility")
                            delegate.version("0.3.2")
                        }

                        delegate.dependency {
                            delegate.groupId("com.ai")
                            delegate.artifactId("ipaas-uac")
                            delegate.version("0.3")
                        }
                    }
                }
            }
        }
            
        publishing.publications.create("${moduleName}", MavenPublication) {
            groupId group
            artifactId moduleName
            version moduleVersion
            artifact  jar
            pom.withXml {
                asNode().children().last() + {
                    delegate.dependencies {
                        delegate.dependency {
                            delegate.groupId("com.ai")
                            delegate.artifactId("ipaas-zookeeper-utility")
                            delegate.version("0.3.2")
                        }

                        delegate.dependency {
                            delegate.groupId("com.ai")
                            delegate.artifactId("ipaas-uac")
                            delegate.version("0.3")
                        }
                    }
                }
            }
        }
    }
    repositories {
        maven {
            if(moduleVersion.endsWith('-SNAPSHOT')) {
                url publishSnapShotsURL
            } else {
                url publishReleaseURL
            }
            credentials {
                username = publishUserName
                password = publishUserPassword
            }
        }
    }
}